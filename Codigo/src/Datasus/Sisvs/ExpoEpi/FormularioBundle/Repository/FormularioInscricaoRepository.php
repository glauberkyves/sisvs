<?php

namespace Datasus\Sisvs\ExpoEpi\FormularioBundle\Repository;

use Datasus\Sisvs\Base\BaseBundle\Repository\BaseRepository;
use Doctrine\ORM\QueryBuilder;
use Symfony\Component\HttpFoundation\Request;


/**
 * FormularioInscricaoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FormularioInscricaoRepository extends BaseRepository
{
    public function getResultGrid(Request $request)
    {
        $params = array();

        parse_str($request->query->get('data'), $params);

        $query = $this
            ->getEntityManager()
            ->createQueryBuilder()
            ->select('f.coSeqFormularioInscricao,
                      f.nuFormulario,
                      m.coSeqModalidade,
                      m.noModalidade,
                      e.noEvento,
                      sf.coSituacaoFormulario,
                      sf.dsSituacaoFormulario,
                      f.dtInicio,
                      f.dtFim
                      ')
            ->from($this->getEntityName(), 'f')
            ->innerJoin('f.coModalidade', 'm')
            ->innerJoin('m.coEvento', 'e')
            ->leftJoin('f.coSituacaoFormulario', 'sf');

        if (isset($params['formulario']) && $params['formulario'] > 1) {
            return array();
        }

        if (!$params['stAtivo'] && !$params['coModalidade']) {
            $query->orWhere('f.coSituacaoFormulario = :coSituacaoFormulario')
                ->setParameter('coSituacaoFormulario', 1);
        }


        $query = $this->addWhere($query, $request);
        $this->addOrderBy($query, $request);

        return $query->getQuery()->getArrayResult();
    }

    public function addWhere(QueryBuilder $query, Request $request = null)
    {
        $params = array();
        parse_str($request->query->get('data'), $params);

        foreach ($params as $key => $value) {
            if ($value != '') {

                switch ($key) {
                    case 'nuFormulario':
                        $query->andWhere($query->expr()->like("UPPER(f.nuFormulario)", "UPPER(:nuFormulario)"))
                            ->setParameter('nuFormulario', '%' . $value . '%');
                        break;
                    case 'coEvento':
                        $query->andWhere('e.coSeqEvento = :coEvento')
                            ->setParameter('coEvento', $value);
                        break;
                    case 'coModalidade':
                        $query->andWhere('m.coSeqModalidade = :coModalidade')
                            ->setParameter('coModalidade', $value);
                        break;
                    case 'stAtivo':
                        $query->andWhere('f.coSituacaoFormulario = :coSituacaoFormulario')
                            ->setParameter('coSituacaoFormulario', $value);
                        break;
                }
            }
        }

        return $query;
    }

    public function getViewFormInsc($id)
    {
        $query = $this->getEntityManager()
            ->createQueryBuilder()
            ->select('f.coSeqFormularioInscricao,
                    f.nuFormulario,
                    f.dsTitulo,
                    f.dtInicio,
                    f.dtFim,
                    f.dsObjeto,
                    f.dsResumo,
                    f.dsApresentacao,
                    f.dsDeclaracao,
                    f.dsAnexos,
                    sf.coSituacaoFormulario,
                    m.noModalidade,
                    m.coSeqModalidade,
                    e.coSeqEvento,
                    e.noEvento,
                    tm.noTipoModalidade'
            )
            ->from($this->_entityName, 'f')
            ->innerJoin('f.coModalidade', 'm')
            ->innerJoin('m.coEvento', 'e')
            ->innerJoin('f.coSituacaoFormulario', 'sf')
            ->leftJoin('m.coTipoModalidade', 'tm')
            ->andWhere('f.coSeqFormularioInscricao = :coSeqFormularioInscricao')
            ->setParameter('coSeqFormularioInscricao', $id)
            ->getQuery()
            ->getSingleResult();

        return $query;
    }

    public function getApresentacaoModalidade(Request $request = null)
    {
        $query = $this->getEntityManager()->createQueryBuilder()
            ->select('ma.nuOrdem,ap.noApresentacao,ap.coSeqApresentacao,mo.coSeqModalidade')
            ->from('DatasusSisvsExpoEpiAdministrativoBundle:ModalidadeApresentacaoEntity', 'ma')
            ->innerJoin('DatasusSisvsExpoEpiAdministrativoBundle:ModalidadeEntity', 'mo', 'WITH', 'mo.coSeqModalidade = ma.coModalidade')
            ->innerJoin('DatasusSisvsExpoEpiAdministrativoBundle:ApresentacaoEntity', 'ap', 'WITH', 'ap.coSeqApresentacao = ma.coApresentacao')
            ->andWhere('mo.coSeqModalidade = :coModalidade')->setParameter('coModalidade', $request->request->get('coModalidade'))
            ->orderBy('ma.nuOrdem');

        return $query->getQuery()->getResult();
    }
}